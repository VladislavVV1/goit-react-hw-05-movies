{"version":3,"file":"static/js/746.06b5a3f0.chunk.js","mappings":"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","sources":["api/api.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '42ebabea7243cf0ffa47f2e71d86a5c3'\nexport const getTrendingMovies = async () => {\n            const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n            return await response.data\n}\nexport const getSearchedMovies = async (q) => {\n    const response = await axios.get(`search/movie?query=${q}&api_key=${API_KEY}`)\n    return await response.data\n}\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`)\n    return await response.data\n}\n\nexport const getMovieDetails = async (id, operation) => {\n    const response = await axios.get(`movie/${id}/${operation}?api_key=${API_KEY}`)\n    return await response.data\n}","import React from 'react'\nimport {Link, useLocation} from 'react-router-dom'\nexport default function MoviesList({m}) {\n    const location = useLocation();\n  return (\n    <li>\n       <Link to={`/movies/${m.id}`} state={{ from: location }}>{m.title}</Link>\n    </li>\n  )\n}\n","import React from 'react'\nimport {useState, useRef} from 'react'\nexport const SearchBar = ({onSubmit}) => {\n    const [value, setValue] = useState('')\n    const prevValue = useRef(value)\n  const  handleInputValueChange = ({target}) => {\n        setValue(target.value)\n    }\n  \n  const  handleFormSubmit = (e) => {\n          e.preventDefault()\n        //   if(value.trim() === ''){\n        //     toast.error('Введите что то')\n        //     return;\n        //   }\n          if(value === prevValue.current){\n            return\n          }\n          prevValue.current = value\n          onSubmit(value)\n      }\n  \nreturn (\n<form onSubmit={handleFormSubmit}>\n <input\n type=\"text\"\n autoComplete=\"off\"\n autoFocus\n placeholder=\"Search images and photos\"\n value={value}\n onInput={(e)=>handleInputValueChange(e)}\n />\n<button type=\"submit\"  >\n      <span>Search</span>\n </button>\n</form>\n)\n}\n","import { getSearchedMovies } from 'api/api'\nimport MoviesList from 'components/MoviesList/MoviesList'\nimport { SearchBar } from 'components/SearchBar/SearchBar'\nimport React from 'react'\nimport {useState, useEffect} from 'react'\nimport { useSearchParams } from 'react-router-dom'\nexport default function Movies() {\n    const [movies, setMovies] = useState([])\n    const [error, setError] = useState(null)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchValue = searchParams.get(\"name\") ?? \"\";\n\n    const onSubmit = (value) => {\n        updateQueryString(value)\n        setMovies([])\n      } \n\n      useEffect(() => {\n        if (searchValue === '') {\n            return;\n          }\n        async function getMovies() {\n            try{\n                    const data = await getSearchedMovies(searchValue)\n                    setMovies(data.results)\n                  }catch (error){\n                    setError(true)\n                  }        \n          }\n          getMovies();\n    }, [searchValue])\n        \n    const updateQueryString = (name) => {\n        const nextParams = name !== \"\" ? { name } : {};\n        setSearchParams(nextParams);\n      };\n  return (\n    <>\n    <SearchBar\n     onSubmit={onSubmit}/>\n    {movies.length !== 0 && \n        <ul>\n           {movies.map(m => <MoviesList key={m.id} m={m}/>\n           )}\n        </ul>\n        }\n    {error && <p>Ooops something went wrong!</p>}\n    </>\n  )\n}\n"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","data","abrupt","stop","apply","arguments","getSearchedMovies","_ref2","_callee2","q","_context2","_x","getMovieById","_ref3","_callee3","id","_context3","_x2","getMovieDetails","_ref4","_callee4","operation","_context4","_x3","_x4","MoviesList","m","location","useLocation","_jsx","children","Link","to","state","from","title","SearchBar","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","prevValue","useRef","_jsxs","e","preventDefault","current","type","autoComplete","autoFocus","placeholder","onInput","target","handleInputValueChange","Movies","_searchParams$get","movies","setMovies","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchValue","get","useEffect","_getMovies","results","t0","getMovies","updateQueryString","name","_Fragment","length","map"],"sourceRoot":""}